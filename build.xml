<?xml version="1.0" encoding="utf-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="ant-sample"
default="main" basedir=".">
  <!-- Run this sample with ant checkstyle and you will recieve checkstyle_report.xml
         file with one violation of ReturnNullInsteadOfBoolean check -->
  <!-- ##########################################################################
         ####################### target: checkstyle ###############################
         ########################################################################## -->
  <target name="pmd"
  description="Generates a report of code convention violations."
  depends="init-pmd">
    <property name="pmd.errCount" value="0" />
    <pmd cacheLocation="pmd.cache" minimumPriority="5"
    failuresPropertyName="pmd.errCount">
      <sourceLanguage name="java" version="19" />
      <ruleset>pmdrules.xml</ruleset>
      <fileset dir="${basedir}">
        <include name="**/*.java" />
      </fileset>
      <auxclasspath>
        <pathelement path="${basedir}" />
      </auxclasspath>
      <formatter type="text" toFile="pmd.errors" toConsole="true">
      </formatter>
    </pmd>
    <echo message="${pmd.errCount} violations found." />
  </target>
  <target name="init-pmd" depends="resolve">
    <!-- checkstyle itself all dependecies and Sevntu custom checks
             are retrieved by Ivy (see ivy.xml) into lib folder
             and will be accessible to checkstyle-->
    <path id="execution.lib.path">
      <fileset dir="lib" includes="*.jar" />
    </path>
    <!-- loading ant task -->
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
    classpathref="execution.lib.path" />
  </target>
  <!-- ##########################################################################
         ####################### target: resolve ##################################
         ########################################################################## -->
  <target name="resolve"
  description="retrieve dependencies with ivy" depends="init-ivy">
    <ivy:settings file="ivysettings.xml" />
    <ivy:retrieve />
  </target>
  <!-- ##########################################################################
         ####### Downloading and setup Ivy for managing dependencies ##############
         ##########################################################################-->
  <property name="ivy.install.version" value="2.5.0" />
  <!-- You may place ivy.jar into other folder if you want to keep folder lib clean-->
  <property name="ivy.jar.dir" value="lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}" />
    <!-- download Ivy from web site
             so that it can be used even without any special installation -->
    <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
    dest="${ivy.jar.file}" usetimestamp="true" />
  </target>
  <target name="init-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
             it into ant's lib dir (note that the latter copy will always take precedence).
             We will not fail as long as local lib dir exists (it may be empty) and
             ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar" />
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
    uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
  </target>
  <target name="makepom">
    <ivy:makepom ivyfile="ivy.xml" pomfile="pom.xml" />
  </target>
  <target name="main" depends="pmd,makepom">
    <description>Main target</description>
  </target>
</project>
